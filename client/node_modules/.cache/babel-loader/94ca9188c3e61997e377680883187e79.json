{"ast":null,"code":"var _jsxFileName = \"E:\\\\Webdesign\\\\react projects\\\\drone-admin\\\\client\\\\src\\\\components\\\\weather\\\\weather.js\";\nimport React, { Component } from 'react';\nimport WeatherForm from './weatherform';\nimport WeatherDisplay from './weatherdisplay';\nconst API_KEY = \"546116de7f4dbe46a3605901db981365\";\nexport default class WeatherCheck extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      temp_min: undefined,\n      temp_max: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      visibility: undefined,\n      windspeed: undefined,\n      winddirection: undefined,\n      description: undefined,\n      weatherIcon: \"800\",\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          visibility: data.visibility,\n          windspeed: data.wind.speed,\n          winddirection: data.wind.deg,\n          description: data.weather[0].description,\n          weatherIcon: data.weather[0].id\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          temp_min: undefined,\n          temp_max: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          visibility: undefined,\n          windspeed: undefined,\n          winddirection: undefined,\n          description: undefined,\n          weatherIcon: \"800\",\n          error: 'Please enter in details'\n        });\n      }\n\n      console.log(this.state);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-header mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Check Weather: \", this.state.city, \" - \", this.state.country, \" \"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(WeatherDisplay, {\n      temperature: this.state.temperature,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      visibility: this.state.visibility,\n      windspeed: this.state.windspeed,\n      winddirection: this.state.winddirection,\n      description: this.state.description,\n      weatherIcon: this.state.weatherIcon,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(WeatherForm, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["E:\\Webdesign\\react projects\\drone-admin\\client\\src\\components\\weather\\weather.js"],"names":["React","Component","WeatherForm","WeatherDisplay","API_KEY","WeatherCheck","state","temperature","undefined","temp_min","temp_max","city","country","humidity","visibility","windspeed","winddirection","description","weatherIcon","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","setState","main","temp","name","sys","wind","speed","deg","weather","id","console","log","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport WeatherForm from './weatherform';\r\nimport WeatherDisplay from './weatherdisplay';\r\n\r\nconst API_KEY = \"546116de7f4dbe46a3605901db981365\";\r\n\r\n\r\nexport default class WeatherCheck extends Component {\r\n\r\n    state = {\r\n        temperature: undefined,\r\n        temp_min: undefined,\r\n        temp_max: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        humidity: undefined,\r\n        visibility: undefined,\r\n        windspeed: undefined,\r\n        winddirection: undefined,\r\n        description: undefined,\r\n        weatherIcon: \"800\",\r\n        error: undefined\r\n\r\n    }\r\n\r\n    getWeather = async (e) => {\r\n        e.preventDefault();\r\n        const city = e.target.elements.city.value;\r\n        const country = e.target.elements.country.value;\r\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\r\n\r\n        const data = await api_call.json();\r\n       if (city && country) {\r\n        this.setState({\r\n            temperature: data.main.temp,\r\n            temp_min: data.main.temp_min,\r\n            temp_max: data.main.temp_max,\r\n            city: data.name,\r\n            country: data.sys.country,\r\n            humidity: data.main.humidity,\r\n            visibility: data.visibility,\r\n            windspeed: data.wind.speed,\r\n            winddirection: data.wind.deg,\r\n            description: data.weather[0].description,\r\n            weatherIcon: data.weather[0].id\r\n\r\n\r\n        })\r\n       } else {\r\n           this.setState({\r\n            temperature: undefined,\r\n            temp_min: undefined,\r\n            temp_max: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            humidity: undefined,\r\n            visibility: undefined,\r\n            windspeed: undefined,\r\n            winddirection: undefined,\r\n            description: undefined,\r\n            weatherIcon: \"800\",\r\n            error: 'Please enter in details'\r\n\r\n           })\r\n\r\n       }\r\n\r\n       console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"card\" style={{textAlign: 'right'}}>\r\n        <h5 className=\"card-header mb-2\">Check Weather: {this.state.city} - {this.state.country} </h5>\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                <WeatherDisplay \r\n                temperature={this.state.temperature}\r\n                temp_min={this.state.temp_min}\r\n                temp_max={this.state.temp_max}\r\n                city={this.state.city}\r\n                country={this.state.country}\r\n                humidity={this.state.humidity}\r\n                visibility={this.state.visibility}\r\n                windspeed={this.state.windspeed}\r\n                winddirection={this.state.winddirection}\r\n                description={this.state.description}\r\n                weatherIcon={this.state.weatherIcon}\r\n                error={this.state.error}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                <WeatherForm getWeather={this.getWeather}  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n    \r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}