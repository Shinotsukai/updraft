{"ast":null,"code":"var _jsxFileName = \"E:\\\\Webdesign\\\\react projects\\\\drone-admin\\\\client\\\\src\\\\app.js\";\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport './assets/css/core.css';\nimport './assets/css/style.css';\nimport 'bootstrap/dist/css/bootstrap-grid.css';\nimport Register from './containers/Landing/register';\nimport Login from './containers/Landing/login';\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport MainWrapper from './MainWrapper';\nimport LandingPage from './containers/Landing/landing'; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  } //redirect to dashboard\n\n}\n\nexport default class App extends Component {\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: LandingPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/Dashboard\",\n      component: MainWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:\\Webdesign\\react projects\\drone-admin\\client\\src\\app.js"],"names":["React","Component","Route","BrowserRouter","Router","Provider","store","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Register","Login","PrivateRoute","MainWrapper","LandingPage","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,QAA+C,kBAA/C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C;AAGA,OAAO,uBAAP;AACA,OAAO,wBAAP;AACA,OAAO,uCAAP;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CAEA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACvB;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAT,EAAAA,YAAY,CAACU,KAAD,CAAZ,CAHuB,CAIvB;;AACA,QAAMC,OAAO,GAAGZ,UAAU,CAACW,KAAD,CAA1B,CALuB,CAMvB;;AACAZ,EAAAA,KAAK,CAACc,QAAN,CAAeX,cAAc,CAACU,OAAD,CAA7B,EAPuB,CAQzB;;AACE,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATuB,CASgB;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAf,IAAAA,KAAK,CAACc,QAAN,CAAeV,UAAU,EAAzB,EAF6B,CAG7B;;AACAe,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD,GAfsB,CAiBvB;;AAED;;AAGH,eAAe,MAAMC,GAAN,SAAkB3B,SAAlB,CAA4B;AAGvC4B,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEvB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAES,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEJ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAME,oBAAC,YAAD;AAAe,MAAA,IAAI,EAAC,YAApB;AAAiC,MAAA,SAAS,EAAEE,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADA,CADJ;AAeH;;AAnBsC","sourcesContent":["import React, { Component } from 'react'\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\n\r\nimport './assets/css/core.css';\r\nimport './assets/css/style.css';\r\nimport 'bootstrap/dist/css/bootstrap-grid.css';\r\nimport Register from './containers/Landing/register';\r\nimport Login from './containers/Landing/login';\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport MainWrapper from './MainWrapper';\r\nimport LandingPage from './containers/Landing/landing';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n    // Set auth token header auth\r\n    const token = localStorage.jwtToken;\r\n    setAuthToken(token);\r\n    // Decode token and get user info and exp\r\n    const decoded = jwt_decode(token);\r\n    // Set user and isAuthenticated\r\n    store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n    const currentTime = Date.now() / 1000; // to get in milliseconds\r\n    if (decoded.exp < currentTime) {\r\n      // Logout user\r\n      store.dispatch(logoutUser());\r\n      // Redirect to login\r\n      window.location.href = \"./login\";\r\n    }\r\n\r\n    //redirect to dashboard\r\n    \r\n  }\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n            <Router>\r\n\r\n            <Route exact path=\"/\" component={LandingPage} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n                         \r\n              <PrivateRoute  path=\"/Dashboard\" component={MainWrapper} />\r\n            \r\n\r\n\r\n            </Router>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}