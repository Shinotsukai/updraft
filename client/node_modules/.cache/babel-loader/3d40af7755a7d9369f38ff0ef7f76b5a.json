{"ast":null,"code":"var _jsxFileName = \"E:\\\\Webdesign\\\\react projects\\\\drone-admin\\\\client\\\\src\\\\containers\\\\Projects\\\\Listing\\\\components\\\\newchecklist.js\";\nimport React, { Component } from 'react';\nexport default class NewChecklist extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeChecklist = this.onChangeChecklist.bind(this);\n    this.newItem = this.newItem.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeListName = this.onChangeListName.bind(this);\n    this.onChangeListDesc = this.onChangeListDesc.bind(this);\n    this.state = {\n      checklist: [{\n        item: \"\",\n        checked: \"\"\n      }],\n      ListName: \"\",\n      ListDesc: \"\"\n    };\n  }\n\n  newItem(e) {\n    if ([\"item\", \"checked\"].includes(e.target.className)) {\n      let checklist = [...this.state.checklist];\n      this.state.checklist[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({\n        checklist\n      }, () => console.log(this.state.checklist));\n    } else {\n      this.setState({\n        [e.target.item]: e.target.value\n      });\n    }\n  }\n\n  onChangeChecklist(e) {\n    this.setState(prevState => ({\n      checklist: [...prevState.checklist, {\n        item: \"\",\n        checked: \"\"\n      }]\n    }));\n  }\n\n  onChangeListName(e) {\n    this.setState({\n      ListName: e.target.value\n    });\n  }\n\n  onChangeListDesc(e) {\n    this.setState({\n      ListDesc: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-header mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Add New Checklist\"), React.createElement(\"div\", {\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      onChange: this.newItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ListName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"ListName\",\n      id: \"ListName\",\n      value: this.state.ListName,\n      onChange: this.onChangeListName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"ListDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"ListDesc\",\n      id: \"ListDesc\",\n      value: this.state.ListDesc,\n      onChange: this.onChangeListDesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), this.state.checklist.map((val, idx) => {\n      let itemId = \"item-\".concat(idx),\n          checkedId = \"checked-\".concat(idx);\n      return React.createElement(\"div\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: itemId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Item #\".concat(idx + 1)), React.createElement(\"input\", {\n        type: \"text\",\n        name: itemId,\n        \"data-id\": idx,\n        id: idx,\n        value: this.state.checklist[idx].item,\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: checkedId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Checked\"), React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: checkedId,\n        \"data-id\": idx,\n        id: checkedId,\n        value: this.state.checklist[idx].checked,\n        className: \"checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }), React.createElement(\"button\", {\n      onClick: this.onChangeChecklist,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"New item\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["E:\\Webdesign\\react projects\\drone-admin\\client\\src\\containers\\Projects\\Listing\\components\\newchecklist.js"],"names":["React","Component","NewChecklist","constructor","props","onChangeChecklist","bind","newItem","onSubmit","onChangeListName","onChangeListDesc","state","checklist","item","checked","ListName","ListDesc","e","includes","target","className","dataset","id","value","setState","console","log","prevState","preventDefault","render","map","val","idx","itemId","checkedId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class NewChecklist extends Component {\r\n    constructor(props){\r\n    super(props)\r\n\r\n    this.onChangeChecklist = this.onChangeChecklist.bind(this);\r\n    this.newItem = this.newItem.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChangeListName = this.onChangeListName.bind(this);\r\n    this.onChangeListDesc = this.onChangeListDesc.bind(this);\r\n\r\n\r\n    this.state = {\r\n        checklist:[{item:\"\", checked:\"\"}],\r\n        ListName: \"\",\r\n        ListDesc: \"\",\r\n    }\r\n}\r\n\r\n    newItem (e) {\r\n        if ([\"item\", \"checked\" ].includes(e.target.className) ) {\r\n            let checklist = [...this.state.checklist]\r\n            this.state.checklist[e.target.dataset.id][e.target.className] = e.target.value\r\n            this.setState ({ checklist }, () => console.log(this.state.checklist))\r\n            \r\n        } else {\r\n            this.setState({[e.target.item]: e.target.value})\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    onChangeChecklist  (e) {\r\n        this.setState((prevState) => ({\r\n            checklist: [...prevState.checklist, {item:\"\", checked:\"\"}],\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    onChangeListName (e) {\r\n        this.setState(\r\n            {ListName:e.target.value}\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    onChangeListDesc (e) {\r\n        this.setState(\r\n            {ListDesc:e.target.value}\r\n        )\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            \r\n            <div className=\"modal-content\">\r\n                   <div className=\"card text-center\">\r\n        <h5 className=\"card-header mb-2\">Add New Checklist</h5>\r\n        \r\n        <div className=\"mb-2\">\r\n                <form onSubmit={this.onSubmit} onChange={this.newItem}>\r\n                    <label htmlFor=\"ListName\">Title</label>\r\n                    <input type=\"text\" name=\"ListName\" id=\"ListName\" value={this.state.ListName} onChange={this.onChangeListName} />\r\n                    <br />\r\n                    <label htmlFor=\"ListDesc\">Description</label>\r\n                    <input type=\"text\" name=\"ListDesc\" id=\"ListDesc\" value={this.state.ListDesc} onChange={this.onChangeListDesc} />\r\n                    \r\n                    {\r\n                        this.state.checklist.map((val, idx) => {\r\n                            let itemId = `item-${idx}`, checkedId = `checked-${idx}`\r\n                            return (\r\n                                <div key={idx}>\r\n                                    <label htmlFor={itemId}>{`Item #${idx +1}`}</label>\r\n                                    <input type=\"text\" name={itemId} data-id={idx} id={idx} value={this.state.checklist[idx].item} className=\"item\" />\r\n\r\n                                    <label htmlFor={checkedId} >Checked</label>\r\n                                    <input type=\"checkbox\" name={checkedId} data-id={idx} id={checkedId} value={this.state.checklist[idx].checked} className=\"checked\" />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <button onClick={this.onChangeChecklist} className=\"btn btn-primary\">New item</button>\r\n                    <input type=\"submit\" value=\"submit\" />\r\n                </form>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}